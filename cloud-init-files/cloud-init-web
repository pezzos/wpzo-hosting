#cloud-config
package_update: true
package_upgrade: true

runcmd:
  - yum update -y
  - timedatectl set-timezone Europe/Paris
  - amazon-linux-extras install -y nginx1 php8.0 amazon-efs-utils
  - yum install -y php-mbstring php-gd php-xml php-pecl-zip php-soap php-intl perl-Switch perl-DateTime perl-Sys-Syslog perl-LWP-Protocol-https perl-Digest-SHA.x86_64 libjpeg-turbo libjpeg-turbo-devel libjpeg-turbo-utils php-opcache mysql
  - echo "fs-083941d55da05ea9a:/nginx/ /etc/nginx efs _netdev,noresvport,tls,iam,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
- echo "fs-083941d55da05ea9a:/php-fpm.d/ /etc/php-fpm.d efs _netdev,noresvport,tls,iam,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
  - echo "fs-083941d55da05ea9a:/ /pezzos/work efs _netdev,noresvport,tls,iam,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
  - echo "fs-0ec934c2b885f607c:/ /pezzos/servers efs _netdev,noresvport,tls,iam,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
  echo "fs-0ec934c2b885f607c:/pezzos.com/admin/ /pezzos/servers/pezzos.com/admin/ efs _netdev,noresvport,tls,iam,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> /etc/fstab
  - mount -a 
  ln -s /pezzos/work/20-wordpress.ini /etc/php.d/20-wordpress.ini
  systemctl enable nginx.service 
  systemctl enable php-fpm.service 
  aws --profile default configure set aws_access_key_id "ACCESSID"
  aws --profile default configure set aws_secret_access_key "SECRETACCESSKEY"
  aws --profile default configure set region "eu-west-3"
  curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
  chmod +x wp-cli.phar
  sudo mv wp-cli.phar /usr/local/bin/wp
  $ sudo curl -sS https://getcomposer.org/installer | sudo php
$ sudo mv composer.phar /usr/local/bin/composer
$ sudo ln -s /usr/local/bin/composer /usr/bin/composer

# # Make sure that NOBODY can access the server without a password
# mysql -e "UPDATE mysql.user SET Password = PASSWORD('<CHANGE_ME>') WHERE User = 'root'"
# # Kill the anonymous users
# mysql -e "DROP USER ''@'localhost'"
# # Because our hostname varies we'll use some Bash magic here.
# mysql -e "DROP USER ''@'$(hostname)'"
# # Delete root user
# mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
# # Kill off the demo database
# mysql -e "DROP DATABASE test"
# # Make our changes take effect
# mysql -e "FLUSH PRIVILEGES"
# # Any subsequent tries to run queries this way will get access denied because lack of usr/pwd param

# # Add the database if MYSQL_USER_DB is set.
# if [ ! -z "$MYSQL_USER_DB" ]; then
# echo "=> Creating $MYSQL_USER_DB."
# mysql -u'root' -p"$MYSQL_ROOT_PASS" -e "CREATE DATABASE IF NOT EXISTS \`$MYSQL_USER_DB\`;"
# fi

# # Add the MYSQL_USER_DB user if it exists and the user vars are set.
# if [ ! -z "$MYSQL_USER_NAME" -a ! -z "$MYSQL_USER_PASS" -a ! -z "$MYSQL_USER_DB" ]; then
# echo "=> Creating $MYSQL_USER_NAME and granting privileges on $MYSQL_USER_DB."
# echo 'Creating user.'
# mysql -u'root' -p"$MYSQL_ROOT_PASS" -e "CREATE USER '$MYSQL_USER_NAME'@'%' IDENTIFIED BY '$MYSQL_USER_PASS';"
# echo 'Created user.'
# echo 'Granting user.'
# mysql -u'root' -p"$MYSQL_ROOT_PASS" -e "GRANT ALL PRIVILEGES ON \`$MYSQL_USER_DB\`.* TO '$MYSQL_USER_NAME'@'%' WITH GRANT OPTION;"
# echo 'Granted user.'
# fi
